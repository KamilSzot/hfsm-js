// Generated by CoffeeScript 1.9.3
(function() {
  var Region, l, states,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  l = console.log.bind(console);

  Region = (function() {
    function Region() {}

    Region.prototype.states = function() {
      var all, s;
      all = [];
      s = this.state;
      while (s) {
        all.push(s);
        s = s.state;
      }
      return all;
    };

    Region.prototype.run = function() {
      return this.state = this[this.$default];
    };

    Region.prototype.to = function(nextStateName) {
      if (this.state && this.state.exit) {
        this.state.exit();
      }
      l(nextStateName);
      this.state = this[nextStateName];
      if (this.state.enter) {
        this.state.enter();
      }
      if (this.state.$default) {
        this.state.to(this.state.$default);
      }
      return this.state;
    };

    Region.prototype.trigger = function(e) {
      if (this.state.on) {
        this.state.on(e, this.to.bind(this));
      }
      if (this.state.state && this.state.state.trigger) {
        return this.state.state.trigger(e);
      }
    };

    return Region;

  })();

  states = new ((function(superClass) {
    extend(_Class, superClass);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.$default = 'operational';

    _Class.prototype.operational = new ((function(superClass1) {
      extend(_Class, superClass1);

      function _Class() {
        return _Class.__super__.constructor.apply(this, arguments);
      }

      _Class.prototype.$default = 'stopped';

      _Class.prototype.on = function(e) {
        if (e === 'flip') {
          return states.to('flipped');
        }
      };

      _Class.prototype.stopped = new ((function(superClass2) {
        extend(_Class, superClass2);

        function _Class() {
          return _Class.__super__.constructor.apply(this, arguments);
        }

        _Class.prototype.on = function(e) {
          if (e === 'play') {
            return states.operational.to('active').to('running');
          }
        };

        return _Class;

      })(Region));

      _Class.prototype.active = {
        enter: function() {
          return l("engage head");
        },
        exit: function() {
          return l("disengage head");
        },
        running: {
          enter: function() {
            return l("start motor");
          },
          exit: function() {
            return l("stop motor");
          },
          on: function(e) {
            if (e === 'pause') {
              return states.operational.active.to('paused');
            }
          }
        },
        paused: {
          on: function(e) {
            if (e === 'play') {
              return states.operational.active.to('running');
            }
          }
        }
      };

      return _Class;

    })(Region));

    _Class.prototype.flipped = {
      enter: function() {
        return l('+flipped');
      },
      exit: function() {
        return l('-unflipped');
      },
      on: function(e) {
        if (e === 'flip') {
          return states.to('operational');
        }
      }
    };

    return _Class;

  })(Region));

  states.to(states.$default);

  states.trigger('flip');

  states.trigger('flip');

}).call(this);
